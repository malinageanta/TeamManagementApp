[{"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\index.js":"1","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reportWebVitals.js":"2","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\App.js":"3","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\errorReducer.js":"4","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\userReducer.js":"5","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\index.js":"6","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\types.js":"7","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\store.js":"8","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\userActions.js":"9","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\errorsActions.js":"10","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Registration.js":"11","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Logout.js":"12","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Login.js":"13","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\PrivateRoute.js":"14","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\AuthRoute.js":"15","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\Dashboard.js":"16","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\SideBar.js":"17","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\profile\\UploadForm.js":"18","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\AddTeam.js":"19","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\CreateTeam.js":"20","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\JoinTeam.js":"21","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\teamReducer.js":"22","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\teamActions.js":"23","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\Members.js":"24","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\AddTeamRoute.js":"25","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\taskReducer.js":"26","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\tasks\\Tasks.js":"27","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\taskActions.js":"28"},{"size":669,"mtime":1617896215728,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1847,"mtime":1623098173578,"results":"32","hashOfConfig":"30"},{"size":648,"mtime":1609369696833,"results":"33","hashOfConfig":"30"},{"size":1687,"mtime":1621720880480,"results":"34","hashOfConfig":"30"},{"size":384,"mtime":1623091844164,"results":"35","hashOfConfig":"30"},{"size":1169,"mtime":1623141662597,"results":"36","hashOfConfig":"30"},{"size":408,"mtime":1609530108286,"results":"37","hashOfConfig":"30"},{"size":3462,"mtime":1623142766986,"results":"38","hashOfConfig":"30"},{"size":308,"mtime":1609542972418,"results":"39","hashOfConfig":"30"},{"size":6092,"mtime":1621021420422,"results":"40","hashOfConfig":"30"},{"size":549,"mtime":1621806027980,"results":"41","hashOfConfig":"30"},{"size":4063,"mtime":1621021427539,"results":"42","hashOfConfig":"30"},{"size":993,"mtime":1621847384322,"results":"43","hashOfConfig":"30"},{"size":832,"mtime":1618168010377,"results":"44","hashOfConfig":"30"},{"size":1614,"mtime":1623002988945,"results":"45","hashOfConfig":"30"},{"size":14291,"mtime":1623098687463,"results":"46","hashOfConfig":"30"},{"size":1745,"mtime":1621843477976,"results":"47","hashOfConfig":"30"},{"size":2460,"mtime":1620943585394,"results":"48","hashOfConfig":"30"},{"size":4161,"mtime":1621927243055,"results":"49","hashOfConfig":"30"},{"size":4339,"mtime":1623066945282,"results":"50","hashOfConfig":"30"},{"size":1156,"mtime":1623141554979,"results":"51","hashOfConfig":"30"},{"size":2803,"mtime":1623081080581,"results":"52","hashOfConfig":"30"},{"size":9969,"mtime":1623144144181,"results":"53","hashOfConfig":"30"},{"size":864,"mtime":1621813972261,"results":"54","hashOfConfig":"30"},{"size":374,"mtime":1623092708090,"results":"55","hashOfConfig":"30"},{"size":2606,"mtime":1623154174224,"results":"56","hashOfConfig":"30"},{"size":1996,"mtime":1623097689993,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1pes2hh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\index.js",[],["117","118"],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reportWebVitals.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\App.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\errorReducer.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\userReducer.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\index.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\types.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\store.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\userActions.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\errorsActions.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Registration.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Logout.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\auth\\Login.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\PrivateRoute.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\AuthRoute.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\Dashboard.js",["119","120"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport SideBar from './SideBar';\r\nimport { Button } from 'react-bootstrap';\r\nimport { setUserItem } from '../actions/userActions';\r\nimport { getUserTeam, createTeam } from '../actions/teamActions';\r\nimport { sendInvitation, getInvitation, updateInvitationState, deleteInvitation } from '../actions/invitationActions';\r\nimport { Avatar } from '@material-ui/core';\r\nimport '../css/Drawer.css';\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleTeamCreation = this.handleTeamCreation.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // const user = this.props.user;\r\n        // this.props.getUserTeam(user.team);\r\n        // const newInvitation = { sender: user.email, receiver: \"tessst@gmail.com\" };\r\n        // this.props.getInvitation(newInvitation.receiver);\r\n    }\r\n\r\n    handleTeamCreation(e) {\r\n        e.preventDefault();\r\n\r\n        const user = this.props.user;\r\n        const role = 'admin';\r\n        const team = \"\";\r\n        //const newTeam = { name: \"tessst123\", admin: \"xuleanu\", members: [] };\r\n        //const newInvitation = { sender: user.email, receiver: \"tessst@gmail.com\" };\r\n\r\n        user.role = role;\r\n        let itemToBeUpdated = 'role';\r\n        let newItem = user.role;\r\n        this.props.setUserItem(user._id, itemToBeUpdated, newItem, false);\r\n        user.team = team;\r\n        //this.props.getUserTeam(user.team);\r\n        //this.props.createTeam(newTeam);\r\n        //this.props.sendInvitation(newInvitation);\r\n        //const invitations = this.props.invitations;\r\n        //invitations[0].state = \"rejected\";\r\n        //this.props.updateInvitationState(invitations[0]._id, invitations[0]);\r\n        // this.props.deleteInvitation(invitations[0]._id);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SideBar />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nDashboard.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n    invitations: state.invitation.invitations\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        setUserItem, getUserTeam, createTeam, sendInvitation,\r\n        getInvitation, updateInvitationState, deleteInvitation\r\n    }\r\n)(Dashboard);\r\n","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\SideBar.js",["121","122"],"import React from 'react';\r\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport '../css/Drawer.css';\r\nimport Logout from './auth/Logout';\r\nimport UploadForm from './profile/UploadForm';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 258;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction PrimarySearchAppBar(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [showComponent, setShowComponent] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n\r\n    const handleLogout = () => {\r\n        setShowComponent(true);\r\n    }\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const renderChild = (childId) =>\r\n        props.children.map(child => {\r\n            return (child.props.id === childId ? child : null)\r\n        })\r\n\r\n    let image = null;\r\n    if (props.user?.photo) {\r\n        image = <Avatar alt='user_photo' src={`${props.user?.photo}`} id=\"image\" className=\"icon\" />;\r\n    }\r\n    else if (props.user) {\r\n        const first = ((props.user.firstName).charAt(0)).toUpperCase();\r\n        const last = ((props.user.lastName).charAt(0)).toUpperCase();\r\n        image = <Avatar id=\"image\" className=\"icon-default\">{first + last}</Avatar>\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleLogout} >Logout</MenuItem>\r\n            {showComponent ?\r\n                <Logout /> :\r\n                null\r\n            }\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}>\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick=\r\n                        {\r\n                            open === true ? handleDrawerClose : handleDrawerOpen\r\n                        }\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, false)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Teams\r\n          </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <MailIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                            <Badge badgeContent={17} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n                {/* <Button variant=\"info\" style={{ height: \"200px\" }} id=\"button\">Create Team</Button> */}\r\n\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    {image}\r\n                </div>\r\n                <div>\r\n                    {<UploadForm />}\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/dashboard\">\r\n                        <ListItemIcon>\r\n                            <HomeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Home\" />\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/members\">\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"My Team\" />\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/tasks\">\r\n                        <ListItemIcon>\r\n                            <AccountTreeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Tasks\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <AssignmentIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Board\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n            <main className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                {props.children}\r\n            </main>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrimarySearchAppBar);\r\n","C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\profile\\UploadForm.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\AddTeam.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\CreateTeam.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\JoinTeam.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\teamReducer.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\teamActions.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\team\\Members.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\utils\\AddTeamRoute.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\reducers\\taskReducer.js",[],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\components\\tasks\\Tasks.js",["123","124","125"],"C:\\Applications\\React\\TeamManagementApp\\api\\client\\src\\actions\\taskActions.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":9,"column":10,"nodeType":"132","messageId":"133","endLine":9,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":159,"column":11,"nodeType":"132","messageId":"133","endLine":159,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":193,"column":11,"nodeType":"132","messageId":"133","endLine":193,"endColumn":22},{"ruleId":"130","severity":1,"message":"137","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":20},{"ruleId":"130","severity":1,"message":"134","line":4,"column":22,"nodeType":"132","messageId":"133","endLine":4,"endColumn":28},{"ruleId":"130","severity":1,"message":"138","line":4,"column":35,"nodeType":"132","messageId":"133","endLine":4,"endColumn":44},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'theme' is assigned a value but never used.","'renderChild' is assigned a value but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]